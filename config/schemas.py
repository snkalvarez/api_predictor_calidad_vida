from marshmallow import Schema, fields, validate

class PrediccionSchema(Schema):

    mother_education_level = fields.String(required=True, validate=validate.OneOf(["PrimIncomp","Ninguno","NSNC","PrimComp","SecIncomp","SecComp","TecComp","UnivComp","TecIncomp","UnivIncomp"]))
    father_education_level = fields.String(required=True, validate=validate.OneOf(["Ninguno","NSNC","PrimComp","PrimIncomp","SecComp","SecIncomp","TecComp","TecIncomp","UnivComp","UnivIncomp"]))
    life_satisfaction_level = fields.Integer(required=True, validate=validate.Range(min=0, max=10))
    job_satisfaction_level = fields.Integer(required=True, validate=validate.Range(min=0, max=10))
    per_capita_income = fields.Float(required=True)
    expenditure_unit_monthly_income = fields.Float(required=True)
    household_monthly_income = fields.Float(required=True)
    household_size = fields.Integer(required=True)
    mother_lives_household = fields.String(required=True, validate=validate.OneOf(["Si", "No", "Fallecida"]))
    father_lives_household = fields.String(required=True, validate=validate.OneOf(["Si", "No", "Fallecido"]))
    current_age = fields.Integer(required=True)
    cognitive_ability = fields.String(required=True, validate=validate.OneOf(["SinDif","AlgoDif","NoPuede","MuchaDif"]))
    income_satisfaction_level = fields.Integer(required=True, validate=validate.Range(min=0, max=10))
    life_worthwhileness = fields.Integer(required=True, validate=validate.Range(min=0, max=10))
    hand_grip_ability = fields.String(required=True, validate=validate.OneOf(["AlgoDif","MuchaDif","NoPuede","SinDif"]))
    mobility_ability = fields.String(required=True, validate=validate.OneOf(["AlgoDif","MuchaDif","NoPuede","SinDif"]))
    vision_ability = fields.String(required=True, validate=validate.OneOf(["AlgoDif","MuchaDif","NoPuede","SinDif"]))
    speech_ability = fields.String(required=True, validate=validate.OneOf(["AlgoDif","MuchaDif","NoPuede","SinDif"]))
    hearing_ability = fields.String(required=True, validate=validate.OneOf(["AlgoDif","MuchaDif","NoPuede","SinDif"]))
    has_chronic_disease = fields.String(required=True, validate=validate.OneOf(["No","Si"]))
    general_health_status = fields.String(required=True, validate=validate.OneOf(["Bueno","Malo","MuyBuen","Regular"]))
    other_health_services = fields.String(required=True, validate=validate.OneOf(["No","Si"]))
    student_health_insurance = fields.String(required=True, validate=validate.OneOf(["No","Si"]))
    hospitalization_surgery_policy = fields.String(required=True, validate=validate.OneOf(["No","Si"]))
    eps_complementary_health_plan = fields.String(required=True, validate=validate.OneOf(["No","Si"]))
    private_health_insurance = fields.String(required=True, validate=validate.OneOf(["No","Si"]))
    health_insurance_affiliation = fields.String(required=True, validate=validate.OneOf(["No","NSNC","Si"]))
    gender = fields.String(required=True, validate=validate.OneOf(["Masc","Fem"]))
    self_care_ability = fields.String(required=True, validate=validate.OneOf(["AlgoDif","MuchaDif","NoPuede","SinDif"]))
    health_issue_last_30_days = fields.String(required=True, validate=validate.OneOf(["No","Si"]))

